---
- name: Install Nginx
  hosts: lighthouse
  roles:
    - nginx-role
  # handlers:
  #   - name: start-nginx
  #     become: true
  #     command: nginx
  #   - name: reload-nginx
  #     become: true
  #     command: nginx -s reload
  # tasks:
  #   - name: NGINX | Install epel-release
  #     become: true
  #     ansible.builtin.yum:
  #       name: epel-release
  #       state: present
  #   - name: NGINX | Install NGINX
  #     become: true
  #     ansible.builtin.yum:
  #       name: nginx
  #       state: present
  #   - name: NGINX | Create Config
  #     become: true
  #     template:
  #       src: templates/nginx.conf.j2
  #       dest: /etc/nginx/nginx.conf
  #       mode: 0644
  #     notify: start-nginx
      
- name: Install Lighthouse
  hosts: lighthouse
  roles:
    - lighthouse-role
  # handlers:
  #   - name: reload-nginx
  #     become: true
  #     command: nginx -s reload
  pre_tasks:
    - name: Lighthouse | Install Git
      become: true
      ansible.builtin.yum:
        name: git
        state: present
  # tasks:
  #   - name: Lighthouse | Copy from github
  #     become: true
  #     git:
  #       repo: "{{ lighthouse_vcs }}"
  #       version: master
  #       dest: "{{ lighthouse_location_dir }}"
  #   - name: Lighthouse | Create lighthouse vector_config
  #     become: true
  #     template:
  #       src: templates/lighthouse.conf.j2
  #       dest: /etc/nginx/conf.d/default.conf
  #       mode: 0644
  #     notify: reload-nginx

- name: Install Clickhouse
  hosts: clickhouse
  roles:
    - clickhouse
  # handlers:
  #   - name: Start clickhouse service
  #     become: true
  #     ansible.builtin.service:
  #       name: clickhouse-server
  #       state: restarted
  # tasks:
  #     - block:
  #       - name: "Get {{ clickhouse_packages | flatten(1) }} distrib"
  #         ansible.builtin.get_url:
  #           url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
  #           dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
  #         with_items: "{{ clickhouse_packages }}"
  #         check_mode: false
  #       rescue:
  #         - name: Get Clickhouse distrib
  #           ansible.builtin.get_url:
  #             url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
  #             dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
  #           check_mode: false
  #     - name: Install clickhouse packages
  #       ansible.builtin.yum:
  #         disable_gpg_check: true
  #         name:                
  #           - clickhouse-common-static-{{ clickhouse_version }}.rpm
  #           - clickhouse-client-{{ clickhouse_version }}.rpm
  #           - clickhouse-server-{{ clickhouse_version }}.rpm
  #       become: true
  #       notify: Start clickhouse service
  #     - name: Flush handlers
  #       meta: flush_handlers
  #     - name: Create database
  #       ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
  #       register: create_db
  #       failed_when: create_db.rc != 0 and create_db.rc !=82
  #       changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  roles:
    - vector-role
  # tasks:
  #   - name: Install Vector
  #     become: true
  #     ansible.builtin.yum:
  #       name: "{{ vector_url }}"
  #       state: present
  #   - name: Vector | Template Config
  #     ansible.builtin.template:
  #       src: templates/vector.yml.j2
  #       dest: vector.yml
  #       mode: "0644"
  #       owner: "{{ ansible_user_id }}"
  #       group: "{{ ansible_user_gid }}"
  #       validate: vector validate --no-environment --config-yaml %s
  #   - name: Vector | Create systemd unit
  #     become: true
  #     ansible.builtin.template:
  #       src: templates/vector.service.j2
  #       dest: /etc/systemd/vector.service
  #       mode: "0755"
  #       owner: "{{ ansible_user_id }}"
  #       group: "{{ ansible_user_gid }}"
  #   - name: Vector | Start Service
  #     become: true
  #     ansible.builtin.systemd:
  #       name: vector
  #       state: started
  #       daemon_reload: true